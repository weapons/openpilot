#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.11.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3454628234171720373) {
   out_3454628234171720373[0] = 0;
   out_3454628234171720373[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3454628234171720373[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3454628234171720373[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3454628234171720373[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3454628234171720373[5] = -sin(in_vec[1]);
   out_3454628234171720373[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3454628234171720373[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3454628234171720373[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3454628234171720373[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3454628234171720373[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3454628234171720373[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3454628234171720373[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3454628234171720373[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3454628234171720373[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3454628234171720373[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3454628234171720373[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3454628234171720373[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8087679064943425206) {
   out_8087679064943425206[0] = delta_x[0] + nom_x[0];
   out_8087679064943425206[1] = delta_x[1] + nom_x[1];
   out_8087679064943425206[2] = delta_x[2] + nom_x[2];
   out_8087679064943425206[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8087679064943425206[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8087679064943425206[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8087679064943425206[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8087679064943425206[7] = delta_x[6] + nom_x[7];
   out_8087679064943425206[8] = delta_x[7] + nom_x[8];
   out_8087679064943425206[9] = delta_x[8] + nom_x[9];
   out_8087679064943425206[10] = delta_x[9] + nom_x[10];
   out_8087679064943425206[11] = delta_x[10] + nom_x[11];
   out_8087679064943425206[12] = delta_x[11] + nom_x[12];
   out_8087679064943425206[13] = delta_x[12] + nom_x[13];
   out_8087679064943425206[14] = delta_x[13] + nom_x[14];
   out_8087679064943425206[15] = delta_x[14] + nom_x[15];
   out_8087679064943425206[16] = delta_x[15] + nom_x[16];
   out_8087679064943425206[17] = delta_x[16] + nom_x[17];
   out_8087679064943425206[18] = delta_x[17] + nom_x[18];
   out_8087679064943425206[19] = delta_x[18] + nom_x[19];
   out_8087679064943425206[20] = delta_x[19] + nom_x[20];
   out_8087679064943425206[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4504426754731950156) {
   out_4504426754731950156[0] = -nom_x[0] + true_x[0];
   out_4504426754731950156[1] = -nom_x[1] + true_x[1];
   out_4504426754731950156[2] = -nom_x[2] + true_x[2];
   out_4504426754731950156[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4504426754731950156[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4504426754731950156[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4504426754731950156[6] = -nom_x[7] + true_x[7];
   out_4504426754731950156[7] = -nom_x[8] + true_x[8];
   out_4504426754731950156[8] = -nom_x[9] + true_x[9];
   out_4504426754731950156[9] = -nom_x[10] + true_x[10];
   out_4504426754731950156[10] = -nom_x[11] + true_x[11];
   out_4504426754731950156[11] = -nom_x[12] + true_x[12];
   out_4504426754731950156[12] = -nom_x[13] + true_x[13];
   out_4504426754731950156[13] = -nom_x[14] + true_x[14];
   out_4504426754731950156[14] = -nom_x[15] + true_x[15];
   out_4504426754731950156[15] = -nom_x[16] + true_x[16];
   out_4504426754731950156[16] = -nom_x[17] + true_x[17];
   out_4504426754731950156[17] = -nom_x[18] + true_x[18];
   out_4504426754731950156[18] = -nom_x[19] + true_x[19];
   out_4504426754731950156[19] = -nom_x[20] + true_x[20];
   out_4504426754731950156[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_762305413404034059) {
   out_762305413404034059[0] = 1.0;
   out_762305413404034059[1] = 0;
   out_762305413404034059[2] = 0;
   out_762305413404034059[3] = 0;
   out_762305413404034059[4] = 0;
   out_762305413404034059[5] = 0;
   out_762305413404034059[6] = 0;
   out_762305413404034059[7] = 0;
   out_762305413404034059[8] = 0;
   out_762305413404034059[9] = 0;
   out_762305413404034059[10] = 0;
   out_762305413404034059[11] = 0;
   out_762305413404034059[12] = 0;
   out_762305413404034059[13] = 0;
   out_762305413404034059[14] = 0;
   out_762305413404034059[15] = 0;
   out_762305413404034059[16] = 0;
   out_762305413404034059[17] = 0;
   out_762305413404034059[18] = 0;
   out_762305413404034059[19] = 0;
   out_762305413404034059[20] = 0;
   out_762305413404034059[21] = 0;
   out_762305413404034059[22] = 1.0;
   out_762305413404034059[23] = 0;
   out_762305413404034059[24] = 0;
   out_762305413404034059[25] = 0;
   out_762305413404034059[26] = 0;
   out_762305413404034059[27] = 0;
   out_762305413404034059[28] = 0;
   out_762305413404034059[29] = 0;
   out_762305413404034059[30] = 0;
   out_762305413404034059[31] = 0;
   out_762305413404034059[32] = 0;
   out_762305413404034059[33] = 0;
   out_762305413404034059[34] = 0;
   out_762305413404034059[35] = 0;
   out_762305413404034059[36] = 0;
   out_762305413404034059[37] = 0;
   out_762305413404034059[38] = 0;
   out_762305413404034059[39] = 0;
   out_762305413404034059[40] = 0;
   out_762305413404034059[41] = 0;
   out_762305413404034059[42] = 0;
   out_762305413404034059[43] = 0;
   out_762305413404034059[44] = 1.0;
   out_762305413404034059[45] = 0;
   out_762305413404034059[46] = 0;
   out_762305413404034059[47] = 0;
   out_762305413404034059[48] = 0;
   out_762305413404034059[49] = 0;
   out_762305413404034059[50] = 0;
   out_762305413404034059[51] = 0;
   out_762305413404034059[52] = 0;
   out_762305413404034059[53] = 0;
   out_762305413404034059[54] = 0;
   out_762305413404034059[55] = 0;
   out_762305413404034059[56] = 0;
   out_762305413404034059[57] = 0;
   out_762305413404034059[58] = 0;
   out_762305413404034059[59] = 0;
   out_762305413404034059[60] = 0;
   out_762305413404034059[61] = 0;
   out_762305413404034059[62] = 0;
   out_762305413404034059[63] = 0;
   out_762305413404034059[64] = 0;
   out_762305413404034059[65] = 0;
   out_762305413404034059[66] = -0.5*state[4];
   out_762305413404034059[67] = -0.5*state[5];
   out_762305413404034059[68] = -0.5*state[6];
   out_762305413404034059[69] = 0;
   out_762305413404034059[70] = 0;
   out_762305413404034059[71] = 0;
   out_762305413404034059[72] = 0;
   out_762305413404034059[73] = 0;
   out_762305413404034059[74] = 0;
   out_762305413404034059[75] = 0;
   out_762305413404034059[76] = 0;
   out_762305413404034059[77] = 0;
   out_762305413404034059[78] = 0;
   out_762305413404034059[79] = 0;
   out_762305413404034059[80] = 0;
   out_762305413404034059[81] = 0;
   out_762305413404034059[82] = 0;
   out_762305413404034059[83] = 0;
   out_762305413404034059[84] = 0;
   out_762305413404034059[85] = 0;
   out_762305413404034059[86] = 0;
   out_762305413404034059[87] = 0.5*state[3];
   out_762305413404034059[88] = 0.5*state[6];
   out_762305413404034059[89] = -0.5*state[5];
   out_762305413404034059[90] = 0;
   out_762305413404034059[91] = 0;
   out_762305413404034059[92] = 0;
   out_762305413404034059[93] = 0;
   out_762305413404034059[94] = 0;
   out_762305413404034059[95] = 0;
   out_762305413404034059[96] = 0;
   out_762305413404034059[97] = 0;
   out_762305413404034059[98] = 0;
   out_762305413404034059[99] = 0;
   out_762305413404034059[100] = 0;
   out_762305413404034059[101] = 0;
   out_762305413404034059[102] = 0;
   out_762305413404034059[103] = 0;
   out_762305413404034059[104] = 0;
   out_762305413404034059[105] = 0;
   out_762305413404034059[106] = 0;
   out_762305413404034059[107] = 0;
   out_762305413404034059[108] = -0.5*state[6];
   out_762305413404034059[109] = 0.5*state[3];
   out_762305413404034059[110] = 0.5*state[4];
   out_762305413404034059[111] = 0;
   out_762305413404034059[112] = 0;
   out_762305413404034059[113] = 0;
   out_762305413404034059[114] = 0;
   out_762305413404034059[115] = 0;
   out_762305413404034059[116] = 0;
   out_762305413404034059[117] = 0;
   out_762305413404034059[118] = 0;
   out_762305413404034059[119] = 0;
   out_762305413404034059[120] = 0;
   out_762305413404034059[121] = 0;
   out_762305413404034059[122] = 0;
   out_762305413404034059[123] = 0;
   out_762305413404034059[124] = 0;
   out_762305413404034059[125] = 0;
   out_762305413404034059[126] = 0;
   out_762305413404034059[127] = 0;
   out_762305413404034059[128] = 0;
   out_762305413404034059[129] = 0.5*state[5];
   out_762305413404034059[130] = -0.5*state[4];
   out_762305413404034059[131] = 0.5*state[3];
   out_762305413404034059[132] = 0;
   out_762305413404034059[133] = 0;
   out_762305413404034059[134] = 0;
   out_762305413404034059[135] = 0;
   out_762305413404034059[136] = 0;
   out_762305413404034059[137] = 0;
   out_762305413404034059[138] = 0;
   out_762305413404034059[139] = 0;
   out_762305413404034059[140] = 0;
   out_762305413404034059[141] = 0;
   out_762305413404034059[142] = 0;
   out_762305413404034059[143] = 0;
   out_762305413404034059[144] = 0;
   out_762305413404034059[145] = 0;
   out_762305413404034059[146] = 0;
   out_762305413404034059[147] = 0;
   out_762305413404034059[148] = 0;
   out_762305413404034059[149] = 0;
   out_762305413404034059[150] = 0;
   out_762305413404034059[151] = 0;
   out_762305413404034059[152] = 0;
   out_762305413404034059[153] = 1.0;
   out_762305413404034059[154] = 0;
   out_762305413404034059[155] = 0;
   out_762305413404034059[156] = 0;
   out_762305413404034059[157] = 0;
   out_762305413404034059[158] = 0;
   out_762305413404034059[159] = 0;
   out_762305413404034059[160] = 0;
   out_762305413404034059[161] = 0;
   out_762305413404034059[162] = 0;
   out_762305413404034059[163] = 0;
   out_762305413404034059[164] = 0;
   out_762305413404034059[165] = 0;
   out_762305413404034059[166] = 0;
   out_762305413404034059[167] = 0;
   out_762305413404034059[168] = 0;
   out_762305413404034059[169] = 0;
   out_762305413404034059[170] = 0;
   out_762305413404034059[171] = 0;
   out_762305413404034059[172] = 0;
   out_762305413404034059[173] = 0;
   out_762305413404034059[174] = 0;
   out_762305413404034059[175] = 1.0;
   out_762305413404034059[176] = 0;
   out_762305413404034059[177] = 0;
   out_762305413404034059[178] = 0;
   out_762305413404034059[179] = 0;
   out_762305413404034059[180] = 0;
   out_762305413404034059[181] = 0;
   out_762305413404034059[182] = 0;
   out_762305413404034059[183] = 0;
   out_762305413404034059[184] = 0;
   out_762305413404034059[185] = 0;
   out_762305413404034059[186] = 0;
   out_762305413404034059[187] = 0;
   out_762305413404034059[188] = 0;
   out_762305413404034059[189] = 0;
   out_762305413404034059[190] = 0;
   out_762305413404034059[191] = 0;
   out_762305413404034059[192] = 0;
   out_762305413404034059[193] = 0;
   out_762305413404034059[194] = 0;
   out_762305413404034059[195] = 0;
   out_762305413404034059[196] = 0;
   out_762305413404034059[197] = 1.0;
   out_762305413404034059[198] = 0;
   out_762305413404034059[199] = 0;
   out_762305413404034059[200] = 0;
   out_762305413404034059[201] = 0;
   out_762305413404034059[202] = 0;
   out_762305413404034059[203] = 0;
   out_762305413404034059[204] = 0;
   out_762305413404034059[205] = 0;
   out_762305413404034059[206] = 0;
   out_762305413404034059[207] = 0;
   out_762305413404034059[208] = 0;
   out_762305413404034059[209] = 0;
   out_762305413404034059[210] = 0;
   out_762305413404034059[211] = 0;
   out_762305413404034059[212] = 0;
   out_762305413404034059[213] = 0;
   out_762305413404034059[214] = 0;
   out_762305413404034059[215] = 0;
   out_762305413404034059[216] = 0;
   out_762305413404034059[217] = 0;
   out_762305413404034059[218] = 0;
   out_762305413404034059[219] = 1.0;
   out_762305413404034059[220] = 0;
   out_762305413404034059[221] = 0;
   out_762305413404034059[222] = 0;
   out_762305413404034059[223] = 0;
   out_762305413404034059[224] = 0;
   out_762305413404034059[225] = 0;
   out_762305413404034059[226] = 0;
   out_762305413404034059[227] = 0;
   out_762305413404034059[228] = 0;
   out_762305413404034059[229] = 0;
   out_762305413404034059[230] = 0;
   out_762305413404034059[231] = 0;
   out_762305413404034059[232] = 0;
   out_762305413404034059[233] = 0;
   out_762305413404034059[234] = 0;
   out_762305413404034059[235] = 0;
   out_762305413404034059[236] = 0;
   out_762305413404034059[237] = 0;
   out_762305413404034059[238] = 0;
   out_762305413404034059[239] = 0;
   out_762305413404034059[240] = 0;
   out_762305413404034059[241] = 1.0;
   out_762305413404034059[242] = 0;
   out_762305413404034059[243] = 0;
   out_762305413404034059[244] = 0;
   out_762305413404034059[245] = 0;
   out_762305413404034059[246] = 0;
   out_762305413404034059[247] = 0;
   out_762305413404034059[248] = 0;
   out_762305413404034059[249] = 0;
   out_762305413404034059[250] = 0;
   out_762305413404034059[251] = 0;
   out_762305413404034059[252] = 0;
   out_762305413404034059[253] = 0;
   out_762305413404034059[254] = 0;
   out_762305413404034059[255] = 0;
   out_762305413404034059[256] = 0;
   out_762305413404034059[257] = 0;
   out_762305413404034059[258] = 0;
   out_762305413404034059[259] = 0;
   out_762305413404034059[260] = 0;
   out_762305413404034059[261] = 0;
   out_762305413404034059[262] = 0;
   out_762305413404034059[263] = 1.0;
   out_762305413404034059[264] = 0;
   out_762305413404034059[265] = 0;
   out_762305413404034059[266] = 0;
   out_762305413404034059[267] = 0;
   out_762305413404034059[268] = 0;
   out_762305413404034059[269] = 0;
   out_762305413404034059[270] = 0;
   out_762305413404034059[271] = 0;
   out_762305413404034059[272] = 0;
   out_762305413404034059[273] = 0;
   out_762305413404034059[274] = 0;
   out_762305413404034059[275] = 0;
   out_762305413404034059[276] = 0;
   out_762305413404034059[277] = 0;
   out_762305413404034059[278] = 0;
   out_762305413404034059[279] = 0;
   out_762305413404034059[280] = 0;
   out_762305413404034059[281] = 0;
   out_762305413404034059[282] = 0;
   out_762305413404034059[283] = 0;
   out_762305413404034059[284] = 0;
   out_762305413404034059[285] = 1.0;
   out_762305413404034059[286] = 0;
   out_762305413404034059[287] = 0;
   out_762305413404034059[288] = 0;
   out_762305413404034059[289] = 0;
   out_762305413404034059[290] = 0;
   out_762305413404034059[291] = 0;
   out_762305413404034059[292] = 0;
   out_762305413404034059[293] = 0;
   out_762305413404034059[294] = 0;
   out_762305413404034059[295] = 0;
   out_762305413404034059[296] = 0;
   out_762305413404034059[297] = 0;
   out_762305413404034059[298] = 0;
   out_762305413404034059[299] = 0;
   out_762305413404034059[300] = 0;
   out_762305413404034059[301] = 0;
   out_762305413404034059[302] = 0;
   out_762305413404034059[303] = 0;
   out_762305413404034059[304] = 0;
   out_762305413404034059[305] = 0;
   out_762305413404034059[306] = 0;
   out_762305413404034059[307] = 1.0;
   out_762305413404034059[308] = 0;
   out_762305413404034059[309] = 0;
   out_762305413404034059[310] = 0;
   out_762305413404034059[311] = 0;
   out_762305413404034059[312] = 0;
   out_762305413404034059[313] = 0;
   out_762305413404034059[314] = 0;
   out_762305413404034059[315] = 0;
   out_762305413404034059[316] = 0;
   out_762305413404034059[317] = 0;
   out_762305413404034059[318] = 0;
   out_762305413404034059[319] = 0;
   out_762305413404034059[320] = 0;
   out_762305413404034059[321] = 0;
   out_762305413404034059[322] = 0;
   out_762305413404034059[323] = 0;
   out_762305413404034059[324] = 0;
   out_762305413404034059[325] = 0;
   out_762305413404034059[326] = 0;
   out_762305413404034059[327] = 0;
   out_762305413404034059[328] = 0;
   out_762305413404034059[329] = 1.0;
   out_762305413404034059[330] = 0;
   out_762305413404034059[331] = 0;
   out_762305413404034059[332] = 0;
   out_762305413404034059[333] = 0;
   out_762305413404034059[334] = 0;
   out_762305413404034059[335] = 0;
   out_762305413404034059[336] = 0;
   out_762305413404034059[337] = 0;
   out_762305413404034059[338] = 0;
   out_762305413404034059[339] = 0;
   out_762305413404034059[340] = 0;
   out_762305413404034059[341] = 0;
   out_762305413404034059[342] = 0;
   out_762305413404034059[343] = 0;
   out_762305413404034059[344] = 0;
   out_762305413404034059[345] = 0;
   out_762305413404034059[346] = 0;
   out_762305413404034059[347] = 0;
   out_762305413404034059[348] = 0;
   out_762305413404034059[349] = 0;
   out_762305413404034059[350] = 0;
   out_762305413404034059[351] = 1.0;
   out_762305413404034059[352] = 0;
   out_762305413404034059[353] = 0;
   out_762305413404034059[354] = 0;
   out_762305413404034059[355] = 0;
   out_762305413404034059[356] = 0;
   out_762305413404034059[357] = 0;
   out_762305413404034059[358] = 0;
   out_762305413404034059[359] = 0;
   out_762305413404034059[360] = 0;
   out_762305413404034059[361] = 0;
   out_762305413404034059[362] = 0;
   out_762305413404034059[363] = 0;
   out_762305413404034059[364] = 0;
   out_762305413404034059[365] = 0;
   out_762305413404034059[366] = 0;
   out_762305413404034059[367] = 0;
   out_762305413404034059[368] = 0;
   out_762305413404034059[369] = 0;
   out_762305413404034059[370] = 0;
   out_762305413404034059[371] = 0;
   out_762305413404034059[372] = 0;
   out_762305413404034059[373] = 1.0;
   out_762305413404034059[374] = 0;
   out_762305413404034059[375] = 0;
   out_762305413404034059[376] = 0;
   out_762305413404034059[377] = 0;
   out_762305413404034059[378] = 0;
   out_762305413404034059[379] = 0;
   out_762305413404034059[380] = 0;
   out_762305413404034059[381] = 0;
   out_762305413404034059[382] = 0;
   out_762305413404034059[383] = 0;
   out_762305413404034059[384] = 0;
   out_762305413404034059[385] = 0;
   out_762305413404034059[386] = 0;
   out_762305413404034059[387] = 0;
   out_762305413404034059[388] = 0;
   out_762305413404034059[389] = 0;
   out_762305413404034059[390] = 0;
   out_762305413404034059[391] = 0;
   out_762305413404034059[392] = 0;
   out_762305413404034059[393] = 0;
   out_762305413404034059[394] = 0;
   out_762305413404034059[395] = 1.0;
   out_762305413404034059[396] = 0;
   out_762305413404034059[397] = 0;
   out_762305413404034059[398] = 0;
   out_762305413404034059[399] = 0;
   out_762305413404034059[400] = 0;
   out_762305413404034059[401] = 0;
   out_762305413404034059[402] = 0;
   out_762305413404034059[403] = 0;
   out_762305413404034059[404] = 0;
   out_762305413404034059[405] = 0;
   out_762305413404034059[406] = 0;
   out_762305413404034059[407] = 0;
   out_762305413404034059[408] = 0;
   out_762305413404034059[409] = 0;
   out_762305413404034059[410] = 0;
   out_762305413404034059[411] = 0;
   out_762305413404034059[412] = 0;
   out_762305413404034059[413] = 0;
   out_762305413404034059[414] = 0;
   out_762305413404034059[415] = 0;
   out_762305413404034059[416] = 0;
   out_762305413404034059[417] = 1.0;
   out_762305413404034059[418] = 0;
   out_762305413404034059[419] = 0;
   out_762305413404034059[420] = 0;
   out_762305413404034059[421] = 0;
   out_762305413404034059[422] = 0;
   out_762305413404034059[423] = 0;
   out_762305413404034059[424] = 0;
   out_762305413404034059[425] = 0;
   out_762305413404034059[426] = 0;
   out_762305413404034059[427] = 0;
   out_762305413404034059[428] = 0;
   out_762305413404034059[429] = 0;
   out_762305413404034059[430] = 0;
   out_762305413404034059[431] = 0;
   out_762305413404034059[432] = 0;
   out_762305413404034059[433] = 0;
   out_762305413404034059[434] = 0;
   out_762305413404034059[435] = 0;
   out_762305413404034059[436] = 0;
   out_762305413404034059[437] = 0;
   out_762305413404034059[438] = 0;
   out_762305413404034059[439] = 1.0;
   out_762305413404034059[440] = 0;
   out_762305413404034059[441] = 0;
   out_762305413404034059[442] = 0;
   out_762305413404034059[443] = 0;
   out_762305413404034059[444] = 0;
   out_762305413404034059[445] = 0;
   out_762305413404034059[446] = 0;
   out_762305413404034059[447] = 0;
   out_762305413404034059[448] = 0;
   out_762305413404034059[449] = 0;
   out_762305413404034059[450] = 0;
   out_762305413404034059[451] = 0;
   out_762305413404034059[452] = 0;
   out_762305413404034059[453] = 0;
   out_762305413404034059[454] = 0;
   out_762305413404034059[455] = 0;
   out_762305413404034059[456] = 0;
   out_762305413404034059[457] = 0;
   out_762305413404034059[458] = 0;
   out_762305413404034059[459] = 0;
   out_762305413404034059[460] = 0;
   out_762305413404034059[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8821406288611470667) {
   out_8821406288611470667[0] = dt*state[7] + state[0];
   out_8821406288611470667[1] = dt*state[8] + state[1];
   out_8821406288611470667[2] = dt*state[9] + state[2];
   out_8821406288611470667[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8821406288611470667[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8821406288611470667[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8821406288611470667[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8821406288611470667[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8821406288611470667[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8821406288611470667[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8821406288611470667[10] = state[10];
   out_8821406288611470667[11] = state[11];
   out_8821406288611470667[12] = state[12];
   out_8821406288611470667[13] = state[13];
   out_8821406288611470667[14] = state[14];
   out_8821406288611470667[15] = state[15];
   out_8821406288611470667[16] = state[16];
   out_8821406288611470667[17] = state[17];
   out_8821406288611470667[18] = state[18];
   out_8821406288611470667[19] = state[19];
   out_8821406288611470667[20] = state[20];
   out_8821406288611470667[21] = state[21];
}
void F_fun(double *state, double dt, double *out_266359796230143370) {
   out_266359796230143370[0] = 1;
   out_266359796230143370[1] = 0;
   out_266359796230143370[2] = 0;
   out_266359796230143370[3] = 0;
   out_266359796230143370[4] = 0;
   out_266359796230143370[5] = 0;
   out_266359796230143370[6] = dt;
   out_266359796230143370[7] = 0;
   out_266359796230143370[8] = 0;
   out_266359796230143370[9] = 0;
   out_266359796230143370[10] = 0;
   out_266359796230143370[11] = 0;
   out_266359796230143370[12] = 0;
   out_266359796230143370[13] = 0;
   out_266359796230143370[14] = 0;
   out_266359796230143370[15] = 0;
   out_266359796230143370[16] = 0;
   out_266359796230143370[17] = 0;
   out_266359796230143370[18] = 0;
   out_266359796230143370[19] = 0;
   out_266359796230143370[20] = 0;
   out_266359796230143370[21] = 0;
   out_266359796230143370[22] = 1;
   out_266359796230143370[23] = 0;
   out_266359796230143370[24] = 0;
   out_266359796230143370[25] = 0;
   out_266359796230143370[26] = 0;
   out_266359796230143370[27] = 0;
   out_266359796230143370[28] = dt;
   out_266359796230143370[29] = 0;
   out_266359796230143370[30] = 0;
   out_266359796230143370[31] = 0;
   out_266359796230143370[32] = 0;
   out_266359796230143370[33] = 0;
   out_266359796230143370[34] = 0;
   out_266359796230143370[35] = 0;
   out_266359796230143370[36] = 0;
   out_266359796230143370[37] = 0;
   out_266359796230143370[38] = 0;
   out_266359796230143370[39] = 0;
   out_266359796230143370[40] = 0;
   out_266359796230143370[41] = 0;
   out_266359796230143370[42] = 0;
   out_266359796230143370[43] = 0;
   out_266359796230143370[44] = 1;
   out_266359796230143370[45] = 0;
   out_266359796230143370[46] = 0;
   out_266359796230143370[47] = 0;
   out_266359796230143370[48] = 0;
   out_266359796230143370[49] = 0;
   out_266359796230143370[50] = dt;
   out_266359796230143370[51] = 0;
   out_266359796230143370[52] = 0;
   out_266359796230143370[53] = 0;
   out_266359796230143370[54] = 0;
   out_266359796230143370[55] = 0;
   out_266359796230143370[56] = 0;
   out_266359796230143370[57] = 0;
   out_266359796230143370[58] = 0;
   out_266359796230143370[59] = 0;
   out_266359796230143370[60] = 0;
   out_266359796230143370[61] = 0;
   out_266359796230143370[62] = 0;
   out_266359796230143370[63] = 0;
   out_266359796230143370[64] = 0;
   out_266359796230143370[65] = 0;
   out_266359796230143370[66] = 1;
   out_266359796230143370[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_266359796230143370[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_266359796230143370[69] = 0;
   out_266359796230143370[70] = 0;
   out_266359796230143370[71] = 0;
   out_266359796230143370[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_266359796230143370[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_266359796230143370[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_266359796230143370[75] = 0;
   out_266359796230143370[76] = 0;
   out_266359796230143370[77] = 0;
   out_266359796230143370[78] = 0;
   out_266359796230143370[79] = 0;
   out_266359796230143370[80] = 0;
   out_266359796230143370[81] = 0;
   out_266359796230143370[82] = 0;
   out_266359796230143370[83] = 0;
   out_266359796230143370[84] = 0;
   out_266359796230143370[85] = 0;
   out_266359796230143370[86] = 0;
   out_266359796230143370[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_266359796230143370[88] = 1;
   out_266359796230143370[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_266359796230143370[90] = 0;
   out_266359796230143370[91] = 0;
   out_266359796230143370[92] = 0;
   out_266359796230143370[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_266359796230143370[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_266359796230143370[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_266359796230143370[96] = 0;
   out_266359796230143370[97] = 0;
   out_266359796230143370[98] = 0;
   out_266359796230143370[99] = 0;
   out_266359796230143370[100] = 0;
   out_266359796230143370[101] = 0;
   out_266359796230143370[102] = 0;
   out_266359796230143370[103] = 0;
   out_266359796230143370[104] = 0;
   out_266359796230143370[105] = 0;
   out_266359796230143370[106] = 0;
   out_266359796230143370[107] = 0;
   out_266359796230143370[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_266359796230143370[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_266359796230143370[110] = 1;
   out_266359796230143370[111] = 0;
   out_266359796230143370[112] = 0;
   out_266359796230143370[113] = 0;
   out_266359796230143370[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_266359796230143370[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_266359796230143370[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_266359796230143370[117] = 0;
   out_266359796230143370[118] = 0;
   out_266359796230143370[119] = 0;
   out_266359796230143370[120] = 0;
   out_266359796230143370[121] = 0;
   out_266359796230143370[122] = 0;
   out_266359796230143370[123] = 0;
   out_266359796230143370[124] = 0;
   out_266359796230143370[125] = 0;
   out_266359796230143370[126] = 0;
   out_266359796230143370[127] = 0;
   out_266359796230143370[128] = 0;
   out_266359796230143370[129] = 0;
   out_266359796230143370[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_266359796230143370[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_266359796230143370[132] = 1;
   out_266359796230143370[133] = 0;
   out_266359796230143370[134] = 0;
   out_266359796230143370[135] = 0;
   out_266359796230143370[136] = 0;
   out_266359796230143370[137] = 0;
   out_266359796230143370[138] = 0;
   out_266359796230143370[139] = 0;
   out_266359796230143370[140] = 0;
   out_266359796230143370[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_266359796230143370[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_266359796230143370[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_266359796230143370[144] = 0;
   out_266359796230143370[145] = 0;
   out_266359796230143370[146] = 0;
   out_266359796230143370[147] = 0;
   out_266359796230143370[148] = 0;
   out_266359796230143370[149] = 0;
   out_266359796230143370[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_266359796230143370[151] = 0;
   out_266359796230143370[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_266359796230143370[153] = 0;
   out_266359796230143370[154] = 1;
   out_266359796230143370[155] = 0;
   out_266359796230143370[156] = 0;
   out_266359796230143370[157] = 0;
   out_266359796230143370[158] = 0;
   out_266359796230143370[159] = 0;
   out_266359796230143370[160] = 0;
   out_266359796230143370[161] = 0;
   out_266359796230143370[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_266359796230143370[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_266359796230143370[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_266359796230143370[165] = 0;
   out_266359796230143370[166] = 0;
   out_266359796230143370[167] = 0;
   out_266359796230143370[168] = 0;
   out_266359796230143370[169] = 0;
   out_266359796230143370[170] = 0;
   out_266359796230143370[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_266359796230143370[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_266359796230143370[173] = 0;
   out_266359796230143370[174] = 0;
   out_266359796230143370[175] = 0;
   out_266359796230143370[176] = 1;
   out_266359796230143370[177] = 0;
   out_266359796230143370[178] = 0;
   out_266359796230143370[179] = 0;
   out_266359796230143370[180] = 0;
   out_266359796230143370[181] = 0;
   out_266359796230143370[182] = 0;
   out_266359796230143370[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_266359796230143370[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_266359796230143370[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_266359796230143370[186] = 0;
   out_266359796230143370[187] = 0;
   out_266359796230143370[188] = 0;
   out_266359796230143370[189] = 0;
   out_266359796230143370[190] = 0;
   out_266359796230143370[191] = 0;
   out_266359796230143370[192] = 0;
   out_266359796230143370[193] = 0;
   out_266359796230143370[194] = 0;
   out_266359796230143370[195] = 0;
   out_266359796230143370[196] = 0;
   out_266359796230143370[197] = 0;
   out_266359796230143370[198] = 1;
   out_266359796230143370[199] = 0;
   out_266359796230143370[200] = 0;
   out_266359796230143370[201] = 0;
   out_266359796230143370[202] = 0;
   out_266359796230143370[203] = 0;
   out_266359796230143370[204] = 0;
   out_266359796230143370[205] = 0;
   out_266359796230143370[206] = 0;
   out_266359796230143370[207] = 0;
   out_266359796230143370[208] = 0;
   out_266359796230143370[209] = 0;
   out_266359796230143370[210] = 0;
   out_266359796230143370[211] = 0;
   out_266359796230143370[212] = 0;
   out_266359796230143370[213] = 0;
   out_266359796230143370[214] = 0;
   out_266359796230143370[215] = 0;
   out_266359796230143370[216] = 0;
   out_266359796230143370[217] = 0;
   out_266359796230143370[218] = 0;
   out_266359796230143370[219] = 0;
   out_266359796230143370[220] = 1;
   out_266359796230143370[221] = 0;
   out_266359796230143370[222] = 0;
   out_266359796230143370[223] = 0;
   out_266359796230143370[224] = 0;
   out_266359796230143370[225] = 0;
   out_266359796230143370[226] = 0;
   out_266359796230143370[227] = 0;
   out_266359796230143370[228] = 0;
   out_266359796230143370[229] = 0;
   out_266359796230143370[230] = 0;
   out_266359796230143370[231] = 0;
   out_266359796230143370[232] = 0;
   out_266359796230143370[233] = 0;
   out_266359796230143370[234] = 0;
   out_266359796230143370[235] = 0;
   out_266359796230143370[236] = 0;
   out_266359796230143370[237] = 0;
   out_266359796230143370[238] = 0;
   out_266359796230143370[239] = 0;
   out_266359796230143370[240] = 0;
   out_266359796230143370[241] = 0;
   out_266359796230143370[242] = 1;
   out_266359796230143370[243] = 0;
   out_266359796230143370[244] = 0;
   out_266359796230143370[245] = 0;
   out_266359796230143370[246] = 0;
   out_266359796230143370[247] = 0;
   out_266359796230143370[248] = 0;
   out_266359796230143370[249] = 0;
   out_266359796230143370[250] = 0;
   out_266359796230143370[251] = 0;
   out_266359796230143370[252] = 0;
   out_266359796230143370[253] = 0;
   out_266359796230143370[254] = 0;
   out_266359796230143370[255] = 0;
   out_266359796230143370[256] = 0;
   out_266359796230143370[257] = 0;
   out_266359796230143370[258] = 0;
   out_266359796230143370[259] = 0;
   out_266359796230143370[260] = 0;
   out_266359796230143370[261] = 0;
   out_266359796230143370[262] = 0;
   out_266359796230143370[263] = 0;
   out_266359796230143370[264] = 1;
   out_266359796230143370[265] = 0;
   out_266359796230143370[266] = 0;
   out_266359796230143370[267] = 0;
   out_266359796230143370[268] = 0;
   out_266359796230143370[269] = 0;
   out_266359796230143370[270] = 0;
   out_266359796230143370[271] = 0;
   out_266359796230143370[272] = 0;
   out_266359796230143370[273] = 0;
   out_266359796230143370[274] = 0;
   out_266359796230143370[275] = 0;
   out_266359796230143370[276] = 0;
   out_266359796230143370[277] = 0;
   out_266359796230143370[278] = 0;
   out_266359796230143370[279] = 0;
   out_266359796230143370[280] = 0;
   out_266359796230143370[281] = 0;
   out_266359796230143370[282] = 0;
   out_266359796230143370[283] = 0;
   out_266359796230143370[284] = 0;
   out_266359796230143370[285] = 0;
   out_266359796230143370[286] = 1;
   out_266359796230143370[287] = 0;
   out_266359796230143370[288] = 0;
   out_266359796230143370[289] = 0;
   out_266359796230143370[290] = 0;
   out_266359796230143370[291] = 0;
   out_266359796230143370[292] = 0;
   out_266359796230143370[293] = 0;
   out_266359796230143370[294] = 0;
   out_266359796230143370[295] = 0;
   out_266359796230143370[296] = 0;
   out_266359796230143370[297] = 0;
   out_266359796230143370[298] = 0;
   out_266359796230143370[299] = 0;
   out_266359796230143370[300] = 0;
   out_266359796230143370[301] = 0;
   out_266359796230143370[302] = 0;
   out_266359796230143370[303] = 0;
   out_266359796230143370[304] = 0;
   out_266359796230143370[305] = 0;
   out_266359796230143370[306] = 0;
   out_266359796230143370[307] = 0;
   out_266359796230143370[308] = 1;
   out_266359796230143370[309] = 0;
   out_266359796230143370[310] = 0;
   out_266359796230143370[311] = 0;
   out_266359796230143370[312] = 0;
   out_266359796230143370[313] = 0;
   out_266359796230143370[314] = 0;
   out_266359796230143370[315] = 0;
   out_266359796230143370[316] = 0;
   out_266359796230143370[317] = 0;
   out_266359796230143370[318] = 0;
   out_266359796230143370[319] = 0;
   out_266359796230143370[320] = 0;
   out_266359796230143370[321] = 0;
   out_266359796230143370[322] = 0;
   out_266359796230143370[323] = 0;
   out_266359796230143370[324] = 0;
   out_266359796230143370[325] = 0;
   out_266359796230143370[326] = 0;
   out_266359796230143370[327] = 0;
   out_266359796230143370[328] = 0;
   out_266359796230143370[329] = 0;
   out_266359796230143370[330] = 1;
   out_266359796230143370[331] = 0;
   out_266359796230143370[332] = 0;
   out_266359796230143370[333] = 0;
   out_266359796230143370[334] = 0;
   out_266359796230143370[335] = 0;
   out_266359796230143370[336] = 0;
   out_266359796230143370[337] = 0;
   out_266359796230143370[338] = 0;
   out_266359796230143370[339] = 0;
   out_266359796230143370[340] = 0;
   out_266359796230143370[341] = 0;
   out_266359796230143370[342] = 0;
   out_266359796230143370[343] = 0;
   out_266359796230143370[344] = 0;
   out_266359796230143370[345] = 0;
   out_266359796230143370[346] = 0;
   out_266359796230143370[347] = 0;
   out_266359796230143370[348] = 0;
   out_266359796230143370[349] = 0;
   out_266359796230143370[350] = 0;
   out_266359796230143370[351] = 0;
   out_266359796230143370[352] = 1;
   out_266359796230143370[353] = 0;
   out_266359796230143370[354] = 0;
   out_266359796230143370[355] = 0;
   out_266359796230143370[356] = 0;
   out_266359796230143370[357] = 0;
   out_266359796230143370[358] = 0;
   out_266359796230143370[359] = 0;
   out_266359796230143370[360] = 0;
   out_266359796230143370[361] = 0;
   out_266359796230143370[362] = 0;
   out_266359796230143370[363] = 0;
   out_266359796230143370[364] = 0;
   out_266359796230143370[365] = 0;
   out_266359796230143370[366] = 0;
   out_266359796230143370[367] = 0;
   out_266359796230143370[368] = 0;
   out_266359796230143370[369] = 0;
   out_266359796230143370[370] = 0;
   out_266359796230143370[371] = 0;
   out_266359796230143370[372] = 0;
   out_266359796230143370[373] = 0;
   out_266359796230143370[374] = 1;
   out_266359796230143370[375] = 0;
   out_266359796230143370[376] = 0;
   out_266359796230143370[377] = 0;
   out_266359796230143370[378] = 0;
   out_266359796230143370[379] = 0;
   out_266359796230143370[380] = 0;
   out_266359796230143370[381] = 0;
   out_266359796230143370[382] = 0;
   out_266359796230143370[383] = 0;
   out_266359796230143370[384] = 0;
   out_266359796230143370[385] = 0;
   out_266359796230143370[386] = 0;
   out_266359796230143370[387] = 0;
   out_266359796230143370[388] = 0;
   out_266359796230143370[389] = 0;
   out_266359796230143370[390] = 0;
   out_266359796230143370[391] = 0;
   out_266359796230143370[392] = 0;
   out_266359796230143370[393] = 0;
   out_266359796230143370[394] = 0;
   out_266359796230143370[395] = 0;
   out_266359796230143370[396] = 1;
   out_266359796230143370[397] = 0;
   out_266359796230143370[398] = 0;
   out_266359796230143370[399] = 0;
   out_266359796230143370[400] = 0;
   out_266359796230143370[401] = 0;
   out_266359796230143370[402] = 0;
   out_266359796230143370[403] = 0;
   out_266359796230143370[404] = 0;
   out_266359796230143370[405] = 0;
   out_266359796230143370[406] = 0;
   out_266359796230143370[407] = 0;
   out_266359796230143370[408] = 0;
   out_266359796230143370[409] = 0;
   out_266359796230143370[410] = 0;
   out_266359796230143370[411] = 0;
   out_266359796230143370[412] = 0;
   out_266359796230143370[413] = 0;
   out_266359796230143370[414] = 0;
   out_266359796230143370[415] = 0;
   out_266359796230143370[416] = 0;
   out_266359796230143370[417] = 0;
   out_266359796230143370[418] = 1;
   out_266359796230143370[419] = 0;
   out_266359796230143370[420] = 0;
   out_266359796230143370[421] = 0;
   out_266359796230143370[422] = 0;
   out_266359796230143370[423] = 0;
   out_266359796230143370[424] = 0;
   out_266359796230143370[425] = 0;
   out_266359796230143370[426] = 0;
   out_266359796230143370[427] = 0;
   out_266359796230143370[428] = 0;
   out_266359796230143370[429] = 0;
   out_266359796230143370[430] = 0;
   out_266359796230143370[431] = 0;
   out_266359796230143370[432] = 0;
   out_266359796230143370[433] = 0;
   out_266359796230143370[434] = 0;
   out_266359796230143370[435] = 0;
   out_266359796230143370[436] = 0;
   out_266359796230143370[437] = 0;
   out_266359796230143370[438] = 0;
   out_266359796230143370[439] = 0;
   out_266359796230143370[440] = 1;
}
void h_4(double *state, double *unused, double *out_3255905342375760594) {
   out_3255905342375760594[0] = state[10] + state[13];
   out_3255905342375760594[1] = state[11] + state[14];
   out_3255905342375760594[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_221772926452997362) {
   out_221772926452997362[0] = 0;
   out_221772926452997362[1] = 0;
   out_221772926452997362[2] = 0;
   out_221772926452997362[3] = 0;
   out_221772926452997362[4] = 0;
   out_221772926452997362[5] = 0;
   out_221772926452997362[6] = 0;
   out_221772926452997362[7] = 0;
   out_221772926452997362[8] = 0;
   out_221772926452997362[9] = 0;
   out_221772926452997362[10] = 1;
   out_221772926452997362[11] = 0;
   out_221772926452997362[12] = 0;
   out_221772926452997362[13] = 1;
   out_221772926452997362[14] = 0;
   out_221772926452997362[15] = 0;
   out_221772926452997362[16] = 0;
   out_221772926452997362[17] = 0;
   out_221772926452997362[18] = 0;
   out_221772926452997362[19] = 0;
   out_221772926452997362[20] = 0;
   out_221772926452997362[21] = 0;
   out_221772926452997362[22] = 0;
   out_221772926452997362[23] = 0;
   out_221772926452997362[24] = 0;
   out_221772926452997362[25] = 0;
   out_221772926452997362[26] = 0;
   out_221772926452997362[27] = 0;
   out_221772926452997362[28] = 0;
   out_221772926452997362[29] = 0;
   out_221772926452997362[30] = 0;
   out_221772926452997362[31] = 0;
   out_221772926452997362[32] = 0;
   out_221772926452997362[33] = 1;
   out_221772926452997362[34] = 0;
   out_221772926452997362[35] = 0;
   out_221772926452997362[36] = 1;
   out_221772926452997362[37] = 0;
   out_221772926452997362[38] = 0;
   out_221772926452997362[39] = 0;
   out_221772926452997362[40] = 0;
   out_221772926452997362[41] = 0;
   out_221772926452997362[42] = 0;
   out_221772926452997362[43] = 0;
   out_221772926452997362[44] = 0;
   out_221772926452997362[45] = 0;
   out_221772926452997362[46] = 0;
   out_221772926452997362[47] = 0;
   out_221772926452997362[48] = 0;
   out_221772926452997362[49] = 0;
   out_221772926452997362[50] = 0;
   out_221772926452997362[51] = 0;
   out_221772926452997362[52] = 0;
   out_221772926452997362[53] = 0;
   out_221772926452997362[54] = 0;
   out_221772926452997362[55] = 0;
   out_221772926452997362[56] = 1;
   out_221772926452997362[57] = 0;
   out_221772926452997362[58] = 0;
   out_221772926452997362[59] = 1;
   out_221772926452997362[60] = 0;
   out_221772926452997362[61] = 0;
   out_221772926452997362[62] = 0;
   out_221772926452997362[63] = 0;
   out_221772926452997362[64] = 0;
   out_221772926452997362[65] = 0;
}
void h_9(double *state, double *unused, double *out_5281234058047696814) {
   out_5281234058047696814[0] = state[10];
   out_5281234058047696814[1] = state[11];
   out_5281234058047696814[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7508991861717444832) {
   out_7508991861717444832[0] = 0;
   out_7508991861717444832[1] = 0;
   out_7508991861717444832[2] = 0;
   out_7508991861717444832[3] = 0;
   out_7508991861717444832[4] = 0;
   out_7508991861717444832[5] = 0;
   out_7508991861717444832[6] = 0;
   out_7508991861717444832[7] = 0;
   out_7508991861717444832[8] = 0;
   out_7508991861717444832[9] = 0;
   out_7508991861717444832[10] = 1;
   out_7508991861717444832[11] = 0;
   out_7508991861717444832[12] = 0;
   out_7508991861717444832[13] = 0;
   out_7508991861717444832[14] = 0;
   out_7508991861717444832[15] = 0;
   out_7508991861717444832[16] = 0;
   out_7508991861717444832[17] = 0;
   out_7508991861717444832[18] = 0;
   out_7508991861717444832[19] = 0;
   out_7508991861717444832[20] = 0;
   out_7508991861717444832[21] = 0;
   out_7508991861717444832[22] = 0;
   out_7508991861717444832[23] = 0;
   out_7508991861717444832[24] = 0;
   out_7508991861717444832[25] = 0;
   out_7508991861717444832[26] = 0;
   out_7508991861717444832[27] = 0;
   out_7508991861717444832[28] = 0;
   out_7508991861717444832[29] = 0;
   out_7508991861717444832[30] = 0;
   out_7508991861717444832[31] = 0;
   out_7508991861717444832[32] = 0;
   out_7508991861717444832[33] = 1;
   out_7508991861717444832[34] = 0;
   out_7508991861717444832[35] = 0;
   out_7508991861717444832[36] = 0;
   out_7508991861717444832[37] = 0;
   out_7508991861717444832[38] = 0;
   out_7508991861717444832[39] = 0;
   out_7508991861717444832[40] = 0;
   out_7508991861717444832[41] = 0;
   out_7508991861717444832[42] = 0;
   out_7508991861717444832[43] = 0;
   out_7508991861717444832[44] = 0;
   out_7508991861717444832[45] = 0;
   out_7508991861717444832[46] = 0;
   out_7508991861717444832[47] = 0;
   out_7508991861717444832[48] = 0;
   out_7508991861717444832[49] = 0;
   out_7508991861717444832[50] = 0;
   out_7508991861717444832[51] = 0;
   out_7508991861717444832[52] = 0;
   out_7508991861717444832[53] = 0;
   out_7508991861717444832[54] = 0;
   out_7508991861717444832[55] = 0;
   out_7508991861717444832[56] = 1;
   out_7508991861717444832[57] = 0;
   out_7508991861717444832[58] = 0;
   out_7508991861717444832[59] = 0;
   out_7508991861717444832[60] = 0;
   out_7508991861717444832[61] = 0;
   out_7508991861717444832[62] = 0;
   out_7508991861717444832[63] = 0;
   out_7508991861717444832[64] = 0;
   out_7508991861717444832[65] = 0;
}
void h_10(double *state, double *unused, double *out_3725997940119829611) {
   out_3725997940119829611[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3725997940119829611[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3725997940119829611[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5425411622832804022) {
   out_5425411622832804022[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5425411622832804022[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5425411622832804022[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5425411622832804022[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5425411622832804022[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5425411622832804022[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5425411622832804022[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5425411622832804022[7] = 0;
   out_5425411622832804022[8] = 0;
   out_5425411622832804022[9] = 0;
   out_5425411622832804022[10] = 0;
   out_5425411622832804022[11] = 0;
   out_5425411622832804022[12] = 0;
   out_5425411622832804022[13] = 0;
   out_5425411622832804022[14] = 0;
   out_5425411622832804022[15] = 0;
   out_5425411622832804022[16] = 1;
   out_5425411622832804022[17] = 0;
   out_5425411622832804022[18] = 0;
   out_5425411622832804022[19] = 1;
   out_5425411622832804022[20] = 0;
   out_5425411622832804022[21] = 0;
   out_5425411622832804022[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5425411622832804022[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5425411622832804022[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5425411622832804022[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5425411622832804022[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5425411622832804022[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5425411622832804022[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5425411622832804022[29] = 0;
   out_5425411622832804022[30] = 0;
   out_5425411622832804022[31] = 0;
   out_5425411622832804022[32] = 0;
   out_5425411622832804022[33] = 0;
   out_5425411622832804022[34] = 0;
   out_5425411622832804022[35] = 0;
   out_5425411622832804022[36] = 0;
   out_5425411622832804022[37] = 0;
   out_5425411622832804022[38] = 0;
   out_5425411622832804022[39] = 1;
   out_5425411622832804022[40] = 0;
   out_5425411622832804022[41] = 0;
   out_5425411622832804022[42] = 1;
   out_5425411622832804022[43] = 0;
   out_5425411622832804022[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5425411622832804022[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5425411622832804022[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5425411622832804022[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5425411622832804022[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5425411622832804022[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5425411622832804022[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5425411622832804022[51] = 0;
   out_5425411622832804022[52] = 0;
   out_5425411622832804022[53] = 0;
   out_5425411622832804022[54] = 0;
   out_5425411622832804022[55] = 0;
   out_5425411622832804022[56] = 0;
   out_5425411622832804022[57] = 0;
   out_5425411622832804022[58] = 0;
   out_5425411622832804022[59] = 0;
   out_5425411622832804022[60] = 0;
   out_5425411622832804022[61] = 0;
   out_5425411622832804022[62] = 1;
   out_5425411622832804022[63] = 0;
   out_5425411622832804022[64] = 0;
   out_5425411622832804022[65] = 1;
}
void h_12(double *state, double *unused, double *out_1018743334405146622) {
   out_1018743334405146622[0] = state[0];
   out_1018743334405146622[1] = state[1];
   out_1018743334405146622[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6159485450589735634) {
   out_6159485450589735634[0] = 1;
   out_6159485450589735634[1] = 0;
   out_6159485450589735634[2] = 0;
   out_6159485450589735634[3] = 0;
   out_6159485450589735634[4] = 0;
   out_6159485450589735634[5] = 0;
   out_6159485450589735634[6] = 0;
   out_6159485450589735634[7] = 0;
   out_6159485450589735634[8] = 0;
   out_6159485450589735634[9] = 0;
   out_6159485450589735634[10] = 0;
   out_6159485450589735634[11] = 0;
   out_6159485450589735634[12] = 0;
   out_6159485450589735634[13] = 0;
   out_6159485450589735634[14] = 0;
   out_6159485450589735634[15] = 0;
   out_6159485450589735634[16] = 0;
   out_6159485450589735634[17] = 0;
   out_6159485450589735634[18] = 0;
   out_6159485450589735634[19] = 0;
   out_6159485450589735634[20] = 0;
   out_6159485450589735634[21] = 0;
   out_6159485450589735634[22] = 0;
   out_6159485450589735634[23] = 1;
   out_6159485450589735634[24] = 0;
   out_6159485450589735634[25] = 0;
   out_6159485450589735634[26] = 0;
   out_6159485450589735634[27] = 0;
   out_6159485450589735634[28] = 0;
   out_6159485450589735634[29] = 0;
   out_6159485450589735634[30] = 0;
   out_6159485450589735634[31] = 0;
   out_6159485450589735634[32] = 0;
   out_6159485450589735634[33] = 0;
   out_6159485450589735634[34] = 0;
   out_6159485450589735634[35] = 0;
   out_6159485450589735634[36] = 0;
   out_6159485450589735634[37] = 0;
   out_6159485450589735634[38] = 0;
   out_6159485450589735634[39] = 0;
   out_6159485450589735634[40] = 0;
   out_6159485450589735634[41] = 0;
   out_6159485450589735634[42] = 0;
   out_6159485450589735634[43] = 0;
   out_6159485450589735634[44] = 0;
   out_6159485450589735634[45] = 0;
   out_6159485450589735634[46] = 1;
   out_6159485450589735634[47] = 0;
   out_6159485450589735634[48] = 0;
   out_6159485450589735634[49] = 0;
   out_6159485450589735634[50] = 0;
   out_6159485450589735634[51] = 0;
   out_6159485450589735634[52] = 0;
   out_6159485450589735634[53] = 0;
   out_6159485450589735634[54] = 0;
   out_6159485450589735634[55] = 0;
   out_6159485450589735634[56] = 0;
   out_6159485450589735634[57] = 0;
   out_6159485450589735634[58] = 0;
   out_6159485450589735634[59] = 0;
   out_6159485450589735634[60] = 0;
   out_6159485450589735634[61] = 0;
   out_6159485450589735634[62] = 0;
   out_6159485450589735634[63] = 0;
   out_6159485450589735634[64] = 0;
   out_6159485450589735634[65] = 0;
}
void h_35(double *state, double *unused, double *out_544127603871537797) {
   out_544127603871537797[0] = state[7];
   out_544127603871537797[1] = state[8];
   out_544127603871537797[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3588434983825604738) {
   out_3588434983825604738[0] = 0;
   out_3588434983825604738[1] = 0;
   out_3588434983825604738[2] = 0;
   out_3588434983825604738[3] = 0;
   out_3588434983825604738[4] = 0;
   out_3588434983825604738[5] = 0;
   out_3588434983825604738[6] = 0;
   out_3588434983825604738[7] = 1;
   out_3588434983825604738[8] = 0;
   out_3588434983825604738[9] = 0;
   out_3588434983825604738[10] = 0;
   out_3588434983825604738[11] = 0;
   out_3588434983825604738[12] = 0;
   out_3588434983825604738[13] = 0;
   out_3588434983825604738[14] = 0;
   out_3588434983825604738[15] = 0;
   out_3588434983825604738[16] = 0;
   out_3588434983825604738[17] = 0;
   out_3588434983825604738[18] = 0;
   out_3588434983825604738[19] = 0;
   out_3588434983825604738[20] = 0;
   out_3588434983825604738[21] = 0;
   out_3588434983825604738[22] = 0;
   out_3588434983825604738[23] = 0;
   out_3588434983825604738[24] = 0;
   out_3588434983825604738[25] = 0;
   out_3588434983825604738[26] = 0;
   out_3588434983825604738[27] = 0;
   out_3588434983825604738[28] = 0;
   out_3588434983825604738[29] = 0;
   out_3588434983825604738[30] = 1;
   out_3588434983825604738[31] = 0;
   out_3588434983825604738[32] = 0;
   out_3588434983825604738[33] = 0;
   out_3588434983825604738[34] = 0;
   out_3588434983825604738[35] = 0;
   out_3588434983825604738[36] = 0;
   out_3588434983825604738[37] = 0;
   out_3588434983825604738[38] = 0;
   out_3588434983825604738[39] = 0;
   out_3588434983825604738[40] = 0;
   out_3588434983825604738[41] = 0;
   out_3588434983825604738[42] = 0;
   out_3588434983825604738[43] = 0;
   out_3588434983825604738[44] = 0;
   out_3588434983825604738[45] = 0;
   out_3588434983825604738[46] = 0;
   out_3588434983825604738[47] = 0;
   out_3588434983825604738[48] = 0;
   out_3588434983825604738[49] = 0;
   out_3588434983825604738[50] = 0;
   out_3588434983825604738[51] = 0;
   out_3588434983825604738[52] = 0;
   out_3588434983825604738[53] = 1;
   out_3588434983825604738[54] = 0;
   out_3588434983825604738[55] = 0;
   out_3588434983825604738[56] = 0;
   out_3588434983825604738[57] = 0;
   out_3588434983825604738[58] = 0;
   out_3588434983825604738[59] = 0;
   out_3588434983825604738[60] = 0;
   out_3588434983825604738[61] = 0;
   out_3588434983825604738[62] = 0;
   out_3588434983825604738[63] = 0;
   out_3588434983825604738[64] = 0;
   out_3588434983825604738[65] = 0;
}
void h_32(double *state, double *unused, double *out_5366371885754649380) {
   out_5366371885754649380[0] = state[3];
   out_5366371885754649380[1] = state[4];
   out_5366371885754649380[2] = state[5];
   out_5366371885754649380[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2010975429041477495) {
   out_2010975429041477495[0] = 0;
   out_2010975429041477495[1] = 0;
   out_2010975429041477495[2] = 0;
   out_2010975429041477495[3] = 1;
   out_2010975429041477495[4] = 0;
   out_2010975429041477495[5] = 0;
   out_2010975429041477495[6] = 0;
   out_2010975429041477495[7] = 0;
   out_2010975429041477495[8] = 0;
   out_2010975429041477495[9] = 0;
   out_2010975429041477495[10] = 0;
   out_2010975429041477495[11] = 0;
   out_2010975429041477495[12] = 0;
   out_2010975429041477495[13] = 0;
   out_2010975429041477495[14] = 0;
   out_2010975429041477495[15] = 0;
   out_2010975429041477495[16] = 0;
   out_2010975429041477495[17] = 0;
   out_2010975429041477495[18] = 0;
   out_2010975429041477495[19] = 0;
   out_2010975429041477495[20] = 0;
   out_2010975429041477495[21] = 0;
   out_2010975429041477495[22] = 0;
   out_2010975429041477495[23] = 0;
   out_2010975429041477495[24] = 0;
   out_2010975429041477495[25] = 0;
   out_2010975429041477495[26] = 1;
   out_2010975429041477495[27] = 0;
   out_2010975429041477495[28] = 0;
   out_2010975429041477495[29] = 0;
   out_2010975429041477495[30] = 0;
   out_2010975429041477495[31] = 0;
   out_2010975429041477495[32] = 0;
   out_2010975429041477495[33] = 0;
   out_2010975429041477495[34] = 0;
   out_2010975429041477495[35] = 0;
   out_2010975429041477495[36] = 0;
   out_2010975429041477495[37] = 0;
   out_2010975429041477495[38] = 0;
   out_2010975429041477495[39] = 0;
   out_2010975429041477495[40] = 0;
   out_2010975429041477495[41] = 0;
   out_2010975429041477495[42] = 0;
   out_2010975429041477495[43] = 0;
   out_2010975429041477495[44] = 0;
   out_2010975429041477495[45] = 0;
   out_2010975429041477495[46] = 0;
   out_2010975429041477495[47] = 0;
   out_2010975429041477495[48] = 0;
   out_2010975429041477495[49] = 1;
   out_2010975429041477495[50] = 0;
   out_2010975429041477495[51] = 0;
   out_2010975429041477495[52] = 0;
   out_2010975429041477495[53] = 0;
   out_2010975429041477495[54] = 0;
   out_2010975429041477495[55] = 0;
   out_2010975429041477495[56] = 0;
   out_2010975429041477495[57] = 0;
   out_2010975429041477495[58] = 0;
   out_2010975429041477495[59] = 0;
   out_2010975429041477495[60] = 0;
   out_2010975429041477495[61] = 0;
   out_2010975429041477495[62] = 0;
   out_2010975429041477495[63] = 0;
   out_2010975429041477495[64] = 0;
   out_2010975429041477495[65] = 0;
   out_2010975429041477495[66] = 0;
   out_2010975429041477495[67] = 0;
   out_2010975429041477495[68] = 0;
   out_2010975429041477495[69] = 0;
   out_2010975429041477495[70] = 0;
   out_2010975429041477495[71] = 0;
   out_2010975429041477495[72] = 1;
   out_2010975429041477495[73] = 0;
   out_2010975429041477495[74] = 0;
   out_2010975429041477495[75] = 0;
   out_2010975429041477495[76] = 0;
   out_2010975429041477495[77] = 0;
   out_2010975429041477495[78] = 0;
   out_2010975429041477495[79] = 0;
   out_2010975429041477495[80] = 0;
   out_2010975429041477495[81] = 0;
   out_2010975429041477495[82] = 0;
   out_2010975429041477495[83] = 0;
   out_2010975429041477495[84] = 0;
   out_2010975429041477495[85] = 0;
   out_2010975429041477495[86] = 0;
   out_2010975429041477495[87] = 0;
}
void h_13(double *state, double *unused, double *out_8661152646959363324) {
   out_8661152646959363324[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8661152646959363324[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8661152646959363324[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5706544133092284167) {
   out_5706544133092284167[0] = 0;
   out_5706544133092284167[1] = 0;
   out_5706544133092284167[2] = 0;
   out_5706544133092284167[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5706544133092284167[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5706544133092284167[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5706544133092284167[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5706544133092284167[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5706544133092284167[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5706544133092284167[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5706544133092284167[10] = 0;
   out_5706544133092284167[11] = 0;
   out_5706544133092284167[12] = 0;
   out_5706544133092284167[13] = 0;
   out_5706544133092284167[14] = 0;
   out_5706544133092284167[15] = 0;
   out_5706544133092284167[16] = 0;
   out_5706544133092284167[17] = 0;
   out_5706544133092284167[18] = 0;
   out_5706544133092284167[19] = 0;
   out_5706544133092284167[20] = 0;
   out_5706544133092284167[21] = 0;
   out_5706544133092284167[22] = 0;
   out_5706544133092284167[23] = 0;
   out_5706544133092284167[24] = 0;
   out_5706544133092284167[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5706544133092284167[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5706544133092284167[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5706544133092284167[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5706544133092284167[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5706544133092284167[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5706544133092284167[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5706544133092284167[32] = 0;
   out_5706544133092284167[33] = 0;
   out_5706544133092284167[34] = 0;
   out_5706544133092284167[35] = 0;
   out_5706544133092284167[36] = 0;
   out_5706544133092284167[37] = 0;
   out_5706544133092284167[38] = 0;
   out_5706544133092284167[39] = 0;
   out_5706544133092284167[40] = 0;
   out_5706544133092284167[41] = 0;
   out_5706544133092284167[42] = 0;
   out_5706544133092284167[43] = 0;
   out_5706544133092284167[44] = 0;
   out_5706544133092284167[45] = 0;
   out_5706544133092284167[46] = 0;
   out_5706544133092284167[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5706544133092284167[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5706544133092284167[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5706544133092284167[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5706544133092284167[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5706544133092284167[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5706544133092284167[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5706544133092284167[54] = 0;
   out_5706544133092284167[55] = 0;
   out_5706544133092284167[56] = 0;
   out_5706544133092284167[57] = 0;
   out_5706544133092284167[58] = 0;
   out_5706544133092284167[59] = 0;
   out_5706544133092284167[60] = 0;
   out_5706544133092284167[61] = 0;
   out_5706544133092284167[62] = 0;
   out_5706544133092284167[63] = 0;
   out_5706544133092284167[64] = 0;
   out_5706544133092284167[65] = 0;
}
void h_14(double *state, double *unused, double *out_5281234058047696814) {
   out_5281234058047696814[0] = state[10];
   out_5281234058047696814[1] = state[11];
   out_5281234058047696814[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7508991861717444832) {
   out_7508991861717444832[0] = 0;
   out_7508991861717444832[1] = 0;
   out_7508991861717444832[2] = 0;
   out_7508991861717444832[3] = 0;
   out_7508991861717444832[4] = 0;
   out_7508991861717444832[5] = 0;
   out_7508991861717444832[6] = 0;
   out_7508991861717444832[7] = 0;
   out_7508991861717444832[8] = 0;
   out_7508991861717444832[9] = 0;
   out_7508991861717444832[10] = 1;
   out_7508991861717444832[11] = 0;
   out_7508991861717444832[12] = 0;
   out_7508991861717444832[13] = 0;
   out_7508991861717444832[14] = 0;
   out_7508991861717444832[15] = 0;
   out_7508991861717444832[16] = 0;
   out_7508991861717444832[17] = 0;
   out_7508991861717444832[18] = 0;
   out_7508991861717444832[19] = 0;
   out_7508991861717444832[20] = 0;
   out_7508991861717444832[21] = 0;
   out_7508991861717444832[22] = 0;
   out_7508991861717444832[23] = 0;
   out_7508991861717444832[24] = 0;
   out_7508991861717444832[25] = 0;
   out_7508991861717444832[26] = 0;
   out_7508991861717444832[27] = 0;
   out_7508991861717444832[28] = 0;
   out_7508991861717444832[29] = 0;
   out_7508991861717444832[30] = 0;
   out_7508991861717444832[31] = 0;
   out_7508991861717444832[32] = 0;
   out_7508991861717444832[33] = 1;
   out_7508991861717444832[34] = 0;
   out_7508991861717444832[35] = 0;
   out_7508991861717444832[36] = 0;
   out_7508991861717444832[37] = 0;
   out_7508991861717444832[38] = 0;
   out_7508991861717444832[39] = 0;
   out_7508991861717444832[40] = 0;
   out_7508991861717444832[41] = 0;
   out_7508991861717444832[42] = 0;
   out_7508991861717444832[43] = 0;
   out_7508991861717444832[44] = 0;
   out_7508991861717444832[45] = 0;
   out_7508991861717444832[46] = 0;
   out_7508991861717444832[47] = 0;
   out_7508991861717444832[48] = 0;
   out_7508991861717444832[49] = 0;
   out_7508991861717444832[50] = 0;
   out_7508991861717444832[51] = 0;
   out_7508991861717444832[52] = 0;
   out_7508991861717444832[53] = 0;
   out_7508991861717444832[54] = 0;
   out_7508991861717444832[55] = 0;
   out_7508991861717444832[56] = 1;
   out_7508991861717444832[57] = 0;
   out_7508991861717444832[58] = 0;
   out_7508991861717444832[59] = 0;
   out_7508991861717444832[60] = 0;
   out_7508991861717444832[61] = 0;
   out_7508991861717444832[62] = 0;
   out_7508991861717444832[63] = 0;
   out_7508991861717444832[64] = 0;
   out_7508991861717444832[65] = 0;
}
void h_33(double *state, double *unused, double *out_5908015058610712007) {
   out_5908015058610712007[0] = state[16];
   out_5908015058610712007[1] = state[17];
   out_5908015058610712007[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4661722796610232449) {
   out_4661722796610232449[0] = 0;
   out_4661722796610232449[1] = 0;
   out_4661722796610232449[2] = 0;
   out_4661722796610232449[3] = 0;
   out_4661722796610232449[4] = 0;
   out_4661722796610232449[5] = 0;
   out_4661722796610232449[6] = 0;
   out_4661722796610232449[7] = 0;
   out_4661722796610232449[8] = 0;
   out_4661722796610232449[9] = 0;
   out_4661722796610232449[10] = 0;
   out_4661722796610232449[11] = 0;
   out_4661722796610232449[12] = 0;
   out_4661722796610232449[13] = 0;
   out_4661722796610232449[14] = 0;
   out_4661722796610232449[15] = 0;
   out_4661722796610232449[16] = 1;
   out_4661722796610232449[17] = 0;
   out_4661722796610232449[18] = 0;
   out_4661722796610232449[19] = 0;
   out_4661722796610232449[20] = 0;
   out_4661722796610232449[21] = 0;
   out_4661722796610232449[22] = 0;
   out_4661722796610232449[23] = 0;
   out_4661722796610232449[24] = 0;
   out_4661722796610232449[25] = 0;
   out_4661722796610232449[26] = 0;
   out_4661722796610232449[27] = 0;
   out_4661722796610232449[28] = 0;
   out_4661722796610232449[29] = 0;
   out_4661722796610232449[30] = 0;
   out_4661722796610232449[31] = 0;
   out_4661722796610232449[32] = 0;
   out_4661722796610232449[33] = 0;
   out_4661722796610232449[34] = 0;
   out_4661722796610232449[35] = 0;
   out_4661722796610232449[36] = 0;
   out_4661722796610232449[37] = 0;
   out_4661722796610232449[38] = 0;
   out_4661722796610232449[39] = 1;
   out_4661722796610232449[40] = 0;
   out_4661722796610232449[41] = 0;
   out_4661722796610232449[42] = 0;
   out_4661722796610232449[43] = 0;
   out_4661722796610232449[44] = 0;
   out_4661722796610232449[45] = 0;
   out_4661722796610232449[46] = 0;
   out_4661722796610232449[47] = 0;
   out_4661722796610232449[48] = 0;
   out_4661722796610232449[49] = 0;
   out_4661722796610232449[50] = 0;
   out_4661722796610232449[51] = 0;
   out_4661722796610232449[52] = 0;
   out_4661722796610232449[53] = 0;
   out_4661722796610232449[54] = 0;
   out_4661722796610232449[55] = 0;
   out_4661722796610232449[56] = 0;
   out_4661722796610232449[57] = 0;
   out_4661722796610232449[58] = 0;
   out_4661722796610232449[59] = 0;
   out_4661722796610232449[60] = 0;
   out_4661722796610232449[61] = 0;
   out_4661722796610232449[62] = 1;
   out_4661722796610232449[63] = 0;
   out_4661722796610232449[64] = 0;
   out_4661722796610232449[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3454628234171720373) {
  H(in_vec, out_3454628234171720373);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8087679064943425206) {
  err_fun(nom_x, delta_x, out_8087679064943425206);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4504426754731950156) {
  inv_err_fun(nom_x, true_x, out_4504426754731950156);
}
void live_H_mod_fun(double *state, double *out_762305413404034059) {
  H_mod_fun(state, out_762305413404034059);
}
void live_f_fun(double *state, double dt, double *out_8821406288611470667) {
  f_fun(state,  dt, out_8821406288611470667);
}
void live_F_fun(double *state, double dt, double *out_266359796230143370) {
  F_fun(state,  dt, out_266359796230143370);
}
void live_h_4(double *state, double *unused, double *out_3255905342375760594) {
  h_4(state, unused, out_3255905342375760594);
}
void live_H_4(double *state, double *unused, double *out_221772926452997362) {
  H_4(state, unused, out_221772926452997362);
}
void live_h_9(double *state, double *unused, double *out_5281234058047696814) {
  h_9(state, unused, out_5281234058047696814);
}
void live_H_9(double *state, double *unused, double *out_7508991861717444832) {
  H_9(state, unused, out_7508991861717444832);
}
void live_h_10(double *state, double *unused, double *out_3725997940119829611) {
  h_10(state, unused, out_3725997940119829611);
}
void live_H_10(double *state, double *unused, double *out_5425411622832804022) {
  H_10(state, unused, out_5425411622832804022);
}
void live_h_12(double *state, double *unused, double *out_1018743334405146622) {
  h_12(state, unused, out_1018743334405146622);
}
void live_H_12(double *state, double *unused, double *out_6159485450589735634) {
  H_12(state, unused, out_6159485450589735634);
}
void live_h_35(double *state, double *unused, double *out_544127603871537797) {
  h_35(state, unused, out_544127603871537797);
}
void live_H_35(double *state, double *unused, double *out_3588434983825604738) {
  H_35(state, unused, out_3588434983825604738);
}
void live_h_32(double *state, double *unused, double *out_5366371885754649380) {
  h_32(state, unused, out_5366371885754649380);
}
void live_H_32(double *state, double *unused, double *out_2010975429041477495) {
  H_32(state, unused, out_2010975429041477495);
}
void live_h_13(double *state, double *unused, double *out_8661152646959363324) {
  h_13(state, unused, out_8661152646959363324);
}
void live_H_13(double *state, double *unused, double *out_5706544133092284167) {
  H_13(state, unused, out_5706544133092284167);
}
void live_h_14(double *state, double *unused, double *out_5281234058047696814) {
  h_14(state, unused, out_5281234058047696814);
}
void live_H_14(double *state, double *unused, double *out_7508991861717444832) {
  H_14(state, unused, out_7508991861717444832);
}
void live_h_33(double *state, double *unused, double *out_5908015058610712007) {
  h_33(state, unused, out_5908015058610712007);
}
void live_H_33(double *state, double *unused, double *out_4661722796610232449) {
  H_33(state, unused, out_4661722796610232449);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
